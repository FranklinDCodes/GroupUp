## Copilot Usage

Prompt: How can I iterate over an object in Javascript?
Purpose: I needed to access both the key and value for the group member info in Groups.js
Generated Code:
``` js
for (let key in myJSONObject) {  
	if (myJSONObject.hasOwnProperty(key)) {  
	console.log(key + ": " + myJSONObject[key]);  
	}  
}
```

Prompt: How would you recommend dynamically changing the side bar buttons depending on what page is being viewed? For example, if I am viewing a specific project. The side bar should have buttons for viewing groups, creating surveys, and viewing responses. However, if I am in the groups, the side bar should have buttons for viewing the members of the group, viewing feedback from group members, etc. How can I ensure that the buttons I want to be displayed are shown in the side bar as the user navigates through the website?
Purpose: I was mentally stuck trying to figure out a way to easily change the menu panel buttons.
Result: The idea to use a JSON object holding configurations in menuPanel.js

Prompt: How do you check the type of a variable in JS?
Result: I learned about the typeof operator in Javascript

Prompt: Copilot, can you help me create a dummy getSurveys function in my current file? I need it to return an array of all the surveys that the user has created. You need to make 3 small test surveys to return. This data will eventually be retrieved from an API, this is just a simulation.
Purpose: Have some sample data to display on the website
Code Generated:
``` js
function getSurveys() {
    const arrSurveys = [
        {
            surveyId: '001',
            title: 'Team Collaboration Survey',
            description: 'A survey to evaluate team collaboration and communication.',
            createdDate: '2025-04-01'
        },
        {
            surveyId: '002',
            title: 'Project Feedback Survey',
            description: 'A survey to gather feedback on the current project progress.',
            createdDate: '2025-04-05'
        },
        {
            surveyId: '003',
            title: 'Group Satisfaction Survey',
            description: 'A survey to measure group member satisfaction and engagement.',
            createdDate: '2025-04-10'
        }
    ];
    return arrSurveys;
}
```

Prompt: Why is arrResponses empty here?
Purpose: I was trying to get the responses to use as data for the charts. There was a bug that I could not figure out.
Code Generated:
``` js
// Copilot gave me the following code:
arrLikertQuestions.forEach(question => {
    console.log('Current Question: ');
    console.log(question);

    // Collect all responses for the current question
    let arrResponses = [];
    objSurvey.groupResponses.forEach(group => {
        group.memberResponses.forEach(member => {
            const answer = member.answers.find(ans => ans.questionid === question.questionid);
            if (answer) {
                arrResponses.push(answer.answer); // Collect the answer
            }
        });
    });

    console.log(`Responses for question "${question.questionText}":`);
    console.log(arrResponses);
});
```


Prompt: Copilot, can you create a survey builder for me? It should have the capability of creating a survey that contains multiple choice, likert, and short answer questions. I would like to have the ability to store responses of the survey, including the specific user that answered the survey. The survey is for the purpose of group evaluation.
Purpose: Due to time constraints, I was unable to learn how to effectively create a survey builder. We briefly experimented with Google Forms integration, but ultimately decided against it.
Code Generated: Nearly all of the code in surveyBuilder.js and surveyBuilder.html was generated by Copilot.

Prompt: Copilot, I need your help. I would like to display the survey responses that the group members made as stated earlier, but I want to display it in a manner such that the project leader sees the survey as it was given. For example, for likert questions, I want the project leader to see all of the options, and the chosen option bubbled in. Can you do this for me?
Purpose: Display a well formatted view of the survey answers that group members gave. 
Code Generated: displayGroupResponses function in viewResponses.js

Prompt: Copilot, can you help me with loading html for a specific survey? The loadSurvey function's job is to load a survey when the user clicks on a dashboard element. I am having trouble getting the html to load in the dashboard.
Purpose: The survey was not being added to the dashboard when the user clicked on a survey in the Group Page.
Code Generated:
``` js
// Iterate over each question in the survey and generate HTML
    objSurvey.questions.forEach(question => {
        // Create a container for the question
        let divQuestionContainer = document.createElement('div');
        divQuestionContainer.className = 'question-container mb-4';

        // Add the question text
        let objQuestionText = document.createElement('h4');
        objQuestionText.innerHTML = question.questionText;
        divQuestionContainer.appendChild(objQuestionText);

  
        // Generate the options or input field based on the question type
        if (question.questionType === 'likert' || question.questionType === 'multipleChoice') {
            question.options.forEach(option => {
                let divOption = document.createElement('div');
                divOption.className = 'form-check';

                let inputOption = document.createElement('input');
                inputOption.className = 'form-check-input';
                inputOption.type = 'radio';
                inputOption.name = `question-${question.questionid}`;
                inputOption.id = `option-${question.questionid}-${option}`;
                inputOption.disabled = true; // Disable input since this is for viewing

                let labelOption = document.createElement('label');
                labelOption.className = 'form-check-label';
                labelOption.setAttribute('for', `option-${question.questionid}-${option}`);
                labelOption.innerHTML = option;
                divOption.appendChild(inputOption);
                divOption.appendChild(labelOption);
                divQuestionContainer.appendChild(divOption);
            });

        } else if (question.questionType === 'shortAnswer') {
            let inputShortAnswer = document.createElement('textarea');
            inputShortAnswer.className = 'form-control';
            inputShortAnswer.placeholder = 'Short answer text';
            inputShortAnswer.disabled = true; // Disable input since this is for viewing
            divQuestionContainer.appendChild(inputShortAnswer);
        }

  

        // Append the question container to the dashboard
        document.querySelector('#divDashboard').appendChild(divQuestionContainer);
    });
```

Prompt: How can I ensure a new div is added for every chart made?
Purpose: A visual bug was occurring when a bar chart was added in the View Responses Page.
Code Generated:
``` js
// Create a new div for the chart
    const chartDiv = document.createElement('div');
    chartDiv.className = 'chart-container'; // Optional: Add a class for styling
    chartDiv.id = `chart-${question.questionid}`; // Unique ID for the chart
    document.querySelector('#divCharts').appendChild(chartDiv);
    
    // Create the chart inside the new div
    createBarChart(arrXAxis, arrYAxis, strName, chartDiv.id);

function createBarChart(arrXAxis, arrYAxis, strName, chartDivId) {
    const options = {
        chart: {
            type: 'bar'
        },
        series: [{
            name: strName,
            data: arrYAxis
        }],
        xaxis: {
            categories: arrXAxis
        }
    };
    const chart = new ApexCharts(document.querySelector(`#${chartDivId}`), options);
    chart.render();
}
```

Prompt: Can you help me dynamically create a header above each chart that is the question.questionText?
Purpose: A visual bug was occurring when I tried to create a header for the bar chart.
Code Generated:
```js
// Create a container div for the chart and its header
    const chartContainer = document.createElement('div');
    chartContainer.className = 'chart-container'; // Optional: Add a class for styling

    // Create a header for the chart
    const chartHeader = document.createElement('h2');
    chartHeader.textContent = question.questionText; // Set the header text
    chartHeader.className = 'chart-header'; // Optional: Add a class for styling
    chartContainer.appendChild(chartHeader); // Append the header to the container

    // Create a new div for the chart
    const chartDiv = document.createElement('div');
    chartDiv.id = `chart-${question.questionid}`; // Unique ID for the chart
    chartContainer.appendChild(chartDiv); // Append the chart div to the container

    // Append the container to the main charts div
    document.querySelector('#divCharts').appendChild(chartContainer);
```

Prompt: What is wrong with my forEach loop?
Purpose: When developing the back button, I made a function findPreviousPage() to iterate over the menu panel button configurations to determine the previous page, but my forEach loop was never returning anything.
Result: Copilot taught me that forEach loops cannot be exited early.

Prompt: Why is the projects plus button not in-line with the projects header?
Result: Fixed minor error I had when setting the flexbox class in projects.js project plus button creation.

Prompt: Copilot, I need you to generate a SQL database for this project. Every table name must be prefixed with "tbl". For example, a table of users must be called tblUsers. The database must be in normal form. Make this a sqlite database.

enrollments  
- course id  
- user id  
courses  
- name  
- number  
- section  
- term  
- startdate  
- enddate  
users  
- first name  
- last name  
- email  
- password  
- creation date time  
- last used date time  
phone  
- nation code  
- area code  
- phone number  
- status (primary or not)  
- user email  
socials  
- type  
- username  
- user email  
assessments  
- course id  
- start date  
- end date  
- name  
- status  
- type (individual or groups)  
assessment questions  
- question type  
- options (JSON)  
- question narrative  
- helper text  
assessment responses  
- assessment id  
- user id  
- question id  
- response  
- public or private  
project groups  
- group name  
- course id  
group members  
- course id  
- group id  
- user id  
sessions  
- user id  
- start datetime  
- last used datetime  
- status  
logs (optional)  
- description  
- type (error, info, warning, etc.)  
- date time

I refactored the above database you gave me. The main change I made was to the names of some of the tables. I changed tblCourses to tblProjects, tblAssessments to tblSurveys, tblAssessmentQuestions to tblSurveyQuestions. I want you to look over the changes I made and see if I missed anything. In addition, I want you to evaluate the quality of the database as a whole. This database is being made for a college web development final project. I am a junior level computer science student making a website where project leaders can create projects, invite members to the projects, form groups, and evaluoate each other's performance in the group. Copilot, I would like you to first search for any small mistakes I made during the refactoring process by comparing my database to the last one you generated. In addition, I would like you to use the context of my entire project to analyze the quality of the database. Does it cover everything I need? Are there changes I need to make? Is there something I'm missing?

``` SQL
-- Enable foreign key constraints

PRAGMA foreign_keys = ON;

-- Create table for phone numbers
CREATE TABLE tblPhone (
phone_id TEXT PRIMARY KEY, -- Use UUID as primary key
nation_code TEXT NOT NULL,
area_code TEXT NOT NULL,
phone_number TEXT NOT NULL,
user_id TEXT NOT NULL,
FOREIGN KEY (user_id) REFERENCES tblUsers(user_id)
);

-- Create table for social accounts
CREATE TABLE tblSocials (
social_id TEXT PRIMARY KEY, -- Use UUID as primary key
type TEXT NOT NULL,
username TEXT NOT NULL,
user_id TEXT NOT NULL,
FOREIGN KEY (user_id) REFERENCES tblUsers(user_id)
);

-- Create table for projects
CREATE TABLE tblProjects (
project_id TEXT PRIMARY KEY, -- Use UUID as primary key
name TEXT NOT NULL,
description TEXT NOT NULL,
project_leader TEXT NOT NULL, -- References the user who is the project leader
FOREIGN KEY (project_leader) REFERENCES tblUsers(user_id)
);  

-- Create table for project members
CREATE TABLE tblProjectMembers (
project_members_id TEXT PRIMARY KEY, -- Use UUID as primary key
project_id TEXT NOT NULL,
user_id TEXT NOT NULL,
FOREIGN KEY (project_id) REFERENCES tblProjects(project_id),
FOREIGN KEY (user_id) REFERENCES tblUsers(user_id)
);

-- Create table for project groups
CREATE TABLE tblProjectGroups (
group_id TEXT PRIMARY KEY, -- Use UUID as primary key
group_name TEXT NOT NULL,
project_id TEXT NOT NULL,
FOREIGN KEY (project_id) REFERENCES tblProjects(project_id)
);

-- Create table for group members
CREATE TABLE tblGroupMembers (
group_member_id TEXT PRIMARY KEY, -- Use UUID as primary key
group_id TEXT NOT NULL,
user_id TEXT NOT NULL,
role TEXT CHECK(role IN ('leader', 'member')) NOT NULL, -- Role of the group member
FOREIGN KEY (group_id) REFERENCES tblProjectGroups(group_id),
FOREIGN KEY (user_id) REFERENCES tblUsers(user_id)
);

-- Create table for surveys
CREATE TABLE tblSurveys (
survey_id TEXT PRIMARY KEY, -- Use UUID as primary key
project_id TEXT NOT NULL,
start_date DATE NOT NULL,
end_date DATE NOT NULL,
scheduled_datetime DATETIME, -- Scheduled send time for the survey
name TEXT NOT NULL,
status TEXT CHECK(status IN ('active', 'inactive')) NOT NULL,
visibility TEXT CHECK(visibility IN ('public', 'private')) NOT NULL, -- Visibility of the survey
FOREIGN KEY (project_id) REFERENCES tblProjects(project_id)
);

-- Create table for survey questions
CREATE TABLE tblSurveyQuestions (
question_id TEXT PRIMARY KEY, -- Use UUID as primary key
survey_id TEXT NOT NULL,
question_type TEXT NOT NULL,
options TEXT,
question_narrative TEXT NOT NULL,
helper_text TEXT,
question_order INTEGER NOT NULL, -- Order of the question in the survey
FOREIGN KEY (survey_id) REFERENCES tblSurveys(survey_id)
);

-- Create table for survey responses
CREATE TABLE tblSurveyResponses (
response_id TEXT PRIMARY KEY, -- Use UUID as primary key
survey_id TEXT NOT NULL,
user_id TEXT NOT NULL,
question_id TEXT NOT NULL,
response TEXT NOT NULL,
visibility TEXT CHECK(visibility IN ('public', 'private')) NOT NULL, -- Visibility of the response
submitted_datetime DATETIME DEFAULT CURRENT_TIMESTAMP, -- Time the response was submitted
FOREIGN KEY (survey_id) REFERENCES tblSurveys(survey_id),
FOREIGN KEY (user_id) REFERENCES tblUsers(user_id),
FOREIGN KEY (question_id) REFERENCES tblSurveyQuestions(question_id)
); 

-- Create table for invitations
CREATE TABLE tblInvitations (
invitation_id TEXT PRIMARY KEY, -- Use UUID as primary key
project_id TEXT NOT NULL,
user_id TEXT NOT NULL,
status TEXT CHECK(status IN ('pending', 'accepted', 'declined')) NOT NULL, -- Status of the invitation
sent_datetime DATETIME DEFAULT CURRENT_TIMESTAMP, -- Time the invitation was sent
FOREIGN KEY (project_id) REFERENCES tblProjects(project_id),
FOREIGN KEY (user_id) REFERENCES tblUsers(user_id)
);

-- Create table for survey analytics
CREATE TABLE tblSurveyAnalytics (
analytics_id TEXT PRIMARY KEY, -- Use UUID as primary key
survey_id TEXT NOT NULL,
question_id TEXT NOT NULL,
average_score REAL, -- Average score for Likert questions
response_count INTEGER, -- Total number of responses
FOREIGN KEY (survey_id) REFERENCES tblSurveys(survey_id),
FOREIGN KEY (question_id) REFERENCES tblSurveyQuestions(question_id)
);

-- Create table for sessions
CREATE TABLE tblSessions (
session_id TEXT PRIMARY KEY, -- Use UUID as primary key
user_id TEXT NOT NULL,
start_datetime DATETIME DEFAULT CURRENT_TIMESTAMP,
last_used_datetime DATETIME,
status TEXT CHECK(status IN ('active', 'inactive')) NOT NULL,
FOREIGN KEY (user_id) REFERENCES tblUsers(user_id)
);
```

When creating the user registration backend, I was having trouble with not getting a response from the server.
Prompt: Why am I getting no response when I make a post request?
Result: Learned about the async behavior of db.all().

I wanted to make a function for running db.all() and db.run() on the database, but I was having trouble because of async code.
Prompt: How can I make my queryDb function work asynchrounously?
Result: Learned how to implement promises to resolve async issues. Copilot generated the promise resolves in the allDb() and runDb() functions.

I had Copilot assist in parsing the phone number in server.js
Prompt: Where I have commented, can you help me parse the phone number such that I can retrieve the nation code, area code, and phone number? The phone number may be in different formats. For example (123)456-7890 and 1234567890 are both valid.
Result: The parsePhoneNumber function in server.js was generated.

After I finished creating the user registration post function in server.js, I asked Copilot for suggestions.
Prompt: Do you see anything I missed in this post function? I am trying to make a user registration backend.
Result: I learned about the db.serialize() function so that consecutive INSERTs don't cause inconsistent data in your database, and I learned that it is important to remember to check if the request body fields are occupied before running your code.

Prompt: On line 145, I am trying to display a sweet alert that shows a corresponding error message from the server. How it works is that in server.js the server sends back an error with something like "Phone number is already associated with an account."
Result: I learned that in order to access the response, I need to use the .json() function first.

Prompt: I am having trouble in the onClickBtnMenuPanelProjects function where the arrUserProjects variable is not storing the user projects despite them being successfully fetched from the API. There is an aysnc problem here. Why is it that my solution of using the await keyword is not working?
Result: I learned that my usage of the await keyword was wrong, and how to properly implement it for GET requests.

Tab autocomplete was used to create the validateSession function.

Prompt: I am having trouble in the onClickBtnMenuPanelProjects function where the arrUserProjects variable is not storing the user projects despite them being successfully fetched from the API. There is an aysnc problem here. Why is it that my solution of using the await keyword is not working?
Result: Learned to use the await keyword for the fetch.

AI was used to generate the survey card in the view feedback page in the Groups Page. The backend was done by myself, but due to time constraints, I felt the need to get the frontend working quickly.

Prompt: I am trying to make a GET request from server.js in the fetchProjectGroups function in fetch.js, however, it is not working properly. What is wrong with the code?
Result: I found a missing await keyword in my code.